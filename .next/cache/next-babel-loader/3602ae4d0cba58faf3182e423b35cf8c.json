{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/Taivnaa/Desktop/github/sandwich-builder/src/containers/SandwichBuilder/SandwichBuilder.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport Sandwich from \"../../components/Sandwich/Sandwich\";\nimport Spinner from \"../../components/UI/Spinner\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Sandwich/OrderSummary/OrderSummary\";\nimport BuildControls from \"../../components/Sandwich/BuildControls/BuildControls\";\n\nvar SandwichBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SandwichBuilder, _Component);\n\n  function SandwichBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SandwichBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SandwichBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      purchasing: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"purchaseHandler\", function () {\n      _this.setState({\n        purchasing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"purchaseCancelHandler\", function () {\n      _this.setState({\n        purchasing: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SandwichBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onIngredientsInitialize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var sandwich = this.props.error ? \"Something went wrong\" : __jsx(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n      var orderSummary = null;\n\n      if (this.props.ings) {\n        sandwich = __jsx(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, __jsx(Sandwich, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), __jsx(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdd,\n          ingredientRemoved: this.props.onIngredientRemove,\n          disabled: disabledInfo,\n          price: this.props.price,\n          ordered: this.purchaseHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }));\n        orderSummary = __jsx(OrderSummary, {\n          ingredients: this.props.ings,\n          purchaseCancelled: this.purchaseCancelHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n\n      return __jsx(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, orderSummary), sandwich);\n    }\n  }]);\n\n  return SandwichBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.sandwichBuilder.ingredients,\n    error: state.sandwichBuilder.error,\n    price: state.sandwichBuilder.totalPrice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientsInitialize: function onIngredientsInitialize() {\n      return dispatch(actions.ingredientsInitialize());\n    },\n    onIngredientAdd: function onIngredientAdd(ing) {\n      return dispatch(actions.addIngredient(ing));\n    },\n    onIngredientRemove: function onIngredientRemove(ing) {\n      return dispatch(actions.removeIngredient(ing));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SandwichBuilder);","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/src/containers/SandwichBuilder/SandwichBuilder.js"],"names":["React","Component","connect","actions","Sandwich","Spinner","Modal","OrderSummary","BuildControls","SandwichBuilder","purchasing","setState","props","onIngredientsInitialize","disabledInfo","ings","key","sandwich","error","orderSummary","onIngredientAdd","onIngredientRemove","price","purchaseHandler","purchaseCancelHandler","state","mapStateToProps","sandwichBuilder","ingredients","totalPrice","mapDispatchToProps","dispatch","ingredientsInitialize","ing","addIngredient","removeIngredient"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\n\nimport Sandwich from \"../../components/Sandwich/Sandwich\";\nimport Spinner from \"../../components/UI/Spinner\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Sandwich/OrderSummary/OrderSummary\";\nimport BuildControls from \"../../components/Sandwich/BuildControls/BuildControls\";\n\nclass SandwichBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onIngredientsInitialize();\n  }\n\n  purchaseHandler = () => {\n    this.setState({ purchasing: true });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({ purchasing: false });\n  };\n\n  render() {\n    const disabledInfo = {\n      ...this.props.ings\n    };\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let sandwich = this.props.error ? \"Something went wrong\" : <Spinner />;\n    let orderSummary = null;\n\n    if (this.props.ings) {\n      sandwich = (\n        <React.Fragment>\n          <Sandwich ingredients={this.props.ings} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdd}\n            ingredientRemoved={this.props.onIngredientRemove}\n            disabled={disabledInfo}\n            price={this.props.price}\n            ordered={this.purchaseHandler}\n          />\n        </React.Fragment>\n      );\n\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ings}\n          purchaseCancelled={this.purchaseCancelHandler}\n        />\n      );\n    }\n    return (\n      <React.Fragment>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {sandwich}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ings: state.sandwichBuilder.ingredients,\n    error: state.sandwichBuilder.error,\n    price: state.sandwichBuilder.totalPrice\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientsInitialize: () => dispatch(actions.ingredientsInitialize()),\n    onIngredientAdd: ing => dispatch(actions.addIngredient(ing)),\n    onIngredientRemove: ing => dispatch(actions.removeIngredient(ing))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SandwichBuilder);\n"]},"metadata":{},"sourceType":"module"}