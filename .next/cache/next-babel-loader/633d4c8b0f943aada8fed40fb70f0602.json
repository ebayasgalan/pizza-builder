{"ast":null,"code":"import * as types from './actionTypes';\nexport const addIngredient = name => {\n  return {\n    type: types.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const removeIngredient = name => {\n  return {\n    type: types.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\nexport const setIngredients = ingredients => {\n  return {\n    type: types.SET_INGREDIENTS,\n    ingredients\n  };\n};\nexport const fetchIngredientsFailed = error => {\n  return {\n    type: types.FETCH_INGREDIENTS_FAILED,\n    error\n  };\n};\nexport const ingredientsInitialize = () => {\n  return {\n    type: types.INGREDIENTS_INITIALIZE\n  };\n};","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/src/store/actions/sandwichBuilderAction.js"],"names":["types","addIngredient","name","type","ADD_INGREDIENT","ingredientName","removeIngredient","REMOVE_INGREDIENT","setIngredients","ingredients","SET_INGREDIENTS","fetchIngredientsFailed","error","FETCH_INGREDIENTS_FAILED","ingredientsInitialize","INGREDIENTS_INITIALIZE"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAO,MAAMC,aAAa,GAAKC,IAAF,IAAY;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI,cADP;AAELC,IAAAA,cAAc,EAAEH;AAFX,GAAP;AAID,CALM;AAOP,OAAO,MAAMI,gBAAgB,GAAKJ,IAAF,IAAY;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACO,iBADP;AAELF,IAAAA,cAAc,EAAEH;AAFX,GAAP;AAID,CALM;AAOP,OAAO,MAAMM,cAAc,GAAKC,WAAF,IAAmB;AAC/C,SAAO;AACLN,IAAAA,IAAI,EAAEH,KAAK,CAACU,eADP;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,sBAAsB,GAAIC,KAAD,IAAW;AAC/C,SAAO;AACLT,IAAAA,IAAI,EAAEH,KAAK,CAACa,wBADP;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,qBAAqB,GAAG,MAAM;AACzC,SAAO;AACLX,IAAAA,IAAI,EAAEH,KAAK,CAACe;AADP,GAAP;AAGD,CAJM","sourcesContent":["import * as types from './actionTypes';\n\nexport const addIngredient = ( name ) => {\n  return {\n    type: types.ADD_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const removeIngredient = ( name ) => {\n  return {\n    type: types.REMOVE_INGREDIENT,\n    ingredientName: name\n  };\n};\n\nexport const setIngredients = ( ingredients ) => {\n  return {\n    type: types.SET_INGREDIENTS,\n    ingredients\n  };\n};\n\nexport const fetchIngredientsFailed = (error) => {\n  return {\n    type: types.FETCH_INGREDIENTS_FAILED,\n    error\n  };\n};\n\nexport const ingredientsInitialize = () => {\n  return {\n    type: types.INGREDIENTS_INITIALIZE\n  };\n};"]},"metadata":{},"sourceType":"module"}