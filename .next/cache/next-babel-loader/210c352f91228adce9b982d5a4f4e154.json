{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar _jsxFileName = \"/Users/Taivnaa/Desktop/github/sandwich-builder/src/components/Sandwich/Sandwich.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport classes from \"./Sandwich.css\";\nimport SandwichIngredient from \"./SandwichIngredient/SandwichIngredient\";\nconst StyledSandwich = styled.div`\n  .Sandwich {\n    width: 100%;\n    margin: auto;\n    height: 250px;\n    overflow: scroll;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.2rem;\n  }\n\n  @media (min-width: 500px) and (min-height: 400px) {\n    .Sandwich {\n      width: 350px;\n      height: 300px;\n    }\n  }\n\n  @media (min-width: 500px) and (min-height: 401px) {\n    .Sandwich {\n      width: 450px;\n      height: 400px;\n    }\n  }\n\n  @media (min-width: 1000px) and (min-height: 700px) {\n    .Sandwich {\n      width: 700px;\n      height: 600px;\n    }\n  }\n`;\n\nconst sandwich = props => {\n  console.log(\"this is before transformation \", props.ingredients);\n\n  let transformedIngredients = _Object$keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return __jsx(SandwichIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Please start adding ingredients!\");\n  }\n\n  console.log(\"this is inside sandwich js transformed one: \", transformedIngredients);\n  return __jsx(\"div\", {\n    className: classes.Sandwich,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(SandwichIngredient, {\n    type: \"top-bread\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), transformedIngredients, __jsx(SandwichIngredient, {\n    type: \"bottom-bread\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n};\n\nexport default sandwich;","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/src/components/Sandwich/Sandwich.js"],"names":["React","styled","classes","SandwichIngredient","StyledSandwich","div","sandwich","props","console","log","ingredients","transformedIngredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Sandwich"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,kBAAP,MAA+B,yCAA/B;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAlC;;AAiCA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAAK,CAACG,WAApD;;AACA,MAAIC,sBAAsB,GAAG,aAAYJ,KAAK,CAACG,WAAlB,EAC1BE,GAD0B,CACtBC,KAAK,IAAI;AACZ,WAAO,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACG,WAAN,CAAkBG,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACxD,aAAO,MAAC,kBAAD;AAAoB,QAAA,GAAG,EAAEH,KAAK,GAAGG,CAAjC;AAAoC,QAAA,IAAI,EAAEH,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD,GAL0B,EAM1BI,MAN0B,CAMnB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACnB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACD,GAR0B,EAQxB,EARwB,CAA7B;;AAUA,MAAIR,sBAAsB,CAACU,MAAvB,KAAkC,CAAtC,EAAyC;AACvCV,IAAAA,sBAAsB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAzB;AACD;;AAEDH,EAAAA,OAAO,CAACC,GAAR,CACE,8CADF,EAEEE,sBAFF;AAKA,SACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACoB,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGX,sBAFH,EAGE,MAAC,kBAAD;AAAoB,IAAA,IAAI,EAAC,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CA5BD;;AA8BA,eAAeL,QAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nimport classes from \"./Sandwich.css\";\nimport SandwichIngredient from \"./SandwichIngredient/SandwichIngredient\";\n\nconst StyledSandwich = styled.div`\n  .Sandwich {\n    width: 100%;\n    margin: auto;\n    height: 250px;\n    overflow: scroll;\n    text-align: center;\n    font-weight: bold;\n    font-size: 1.2rem;\n  }\n\n  @media (min-width: 500px) and (min-height: 400px) {\n    .Sandwich {\n      width: 350px;\n      height: 300px;\n    }\n  }\n\n  @media (min-width: 500px) and (min-height: 401px) {\n    .Sandwich {\n      width: 450px;\n      height: 400px;\n    }\n  }\n\n  @media (min-width: 1000px) and (min-height: 700px) {\n    .Sandwich {\n      width: 700px;\n      height: 600px;\n    }\n  }\n`;\n\nconst sandwich = props => {\n  console.log(\"this is before transformation \", props.ingredients);\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\n        return <SandwichIngredient key={igKey + i} type={igKey} />;\n      });\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  console.log(\n    \"this is inside sandwich js transformed one: \",\n    transformedIngredients\n  );\n\n  return (\n    <div className={classes.Sandwich}>\n      <SandwichIngredient type=\"top-bread\" />\n      {transformedIngredients}\n      <SandwichIngredient type=\"bottom-bread\" />\n    </div>\n  );\n};\n\nexport default sandwich;\n"]},"metadata":{},"sourceType":"module"}