{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport * as types from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nvar INITIAL_STATE = {\n  ingredients: null,\n  totalPrice: 6,\n  error: false,\n  building: false\n};\nvar INGREDIENT_PRICES = {\n  lettuce: 0.6,\n  beef: 2.5,\n  turkey: 2.0,\n  cheese: 0.5,\n  tomato: 0.3\n};\n\nvar addIngredient = function addIngredient(state, action) {\n  var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n  var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  var updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar removeIngredient = function removeIngredient(state, action) {\n  var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n  var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  var updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nvar setIngredients = function setIngredients(state, action) {\n  return updateObject(state, {\n    ingredients: {\n      cheese: action.ingredients.cheese,\n      beef: action.ingredients.beef,\n      turkey: action.ingredients.turkey,\n      lettuce: action.ingredients.lettuce,\n      tomato: action.ingredients.tomato\n    },\n    totalPrice: 6,\n    error: false,\n    building: false\n  });\n};\n\nvar fetchIngredientsFailed = function fetchIngredientsFailed(state, action) {\n  return updateObject(state, {\n    error: true\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case types.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case types.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case types.FETCH_INGREDIENTS_FAILED:\n      return fetchIngredientsFailed(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/src/store/reducers/sandwichBuilderReducer.js"],"names":["types","updateObject","INITIAL_STATE","ingredients","totalPrice","error","building","INGREDIENT_PRICES","lettuce","beef","turkey","cheese","tomato","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","removeIngredient","setIngredients","fetchIngredientsFailed","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":"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","sourcesContent":["import * as types from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\n\nconst INITIAL_STATE = {\n  ingredients: null,\n  totalPrice: 6,\n  error: false,\n  building: false\n};\n\nconst INGREDIENT_PRICES = {\n  lettuce: 0.6,\n  beef: 2.5,\n  turkey: 2.0,\n  cheese: 0.5,\n  tomato: 0.3\n};\n\nconst addIngredient = ( state, action ) => {\n  const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] + 1};\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = ( state, action ) => {\n  const updatedIngredient = {[action.ingredientName]: state.ingredients[action.ingredientName] - 1};\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = ( state, action ) => {\n  return updateObject(state, {\n    ingredients: {\n      cheese: action.ingredients.cheese,\n      beef: action.ingredients.beef,\n      turkey: action.ingredients.turkey,\n      lettuce: action.ingredients.lettuce,\n      tomato: action.ingredients.tomato\n    },\n    totalPrice: 6,\n    error: false,\n    building: false\n  });\n};\n\nconst fetchIngredientsFailed = ( state, action ) => {\n  return updateObject(state, { error: true });\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case types.ADD_INGREDIENT: return addIngredient(state,action);\n    case types.REMOVE_INGREDIENT: return removeIngredient(state,action);\n    case types.SET_INGREDIENTS: return setIngredients(state,action);\n    case types.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state,action);\n    default: return state;\n  }\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}