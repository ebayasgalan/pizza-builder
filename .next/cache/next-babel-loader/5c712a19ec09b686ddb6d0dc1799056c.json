{"ast":null,"code":"var _jsxFileName = \"/Users/Taivnaa/Desktop/github/sandwich-builder/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"../src/App\";\nimport sandwichBuilderReducer from \"../src/store/reducers/sandwichBuilderReducer\";\nimport orderReducer from \"../src/store/reducers/order\";\nimport authReducer from \"../src/store/reducers/auth\"; // const composeEnhancers =\n//   process.env.NODE_ENV === \"development\"\n//     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//     : null || compose;\n\nconst rootReducer = combineReducers({\n  sandwichBuilder: sandwichBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default class index extends Component {\n  render() {\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(App, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/pages/index.js"],"names":["React","Component","createStore","applyMiddleware","compose","combineReducers","Provider","thunk","App","sandwichBuilderReducer","orderReducer","authReducer","rootReducer","sandwichBuilder","order","auth","store","index","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,sBAAP,MAAmC,8CAAnC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;AACA;AACA;AACA;;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAClCQ,EAAAA,eAAe,EAAEJ,sBADiB;AAElCK,EAAAA,KAAK,EAAEJ,YAF2B;AAGlCK,EAAAA,IAAI,EAAEJ;AAH4B,CAAD,CAAnC;AAMA,MAAMK,KAAK,GAAGd,WAAW,CAACU,WAAD,EAAcT,eAAe,CAACI,KAAD,CAA7B,CAAzB;AAEA,eAAe,MAAMU,KAAN,SAAoBhB,SAApB,CAA8B;AAC3CiB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAP0C","sourcesContent":["import React, { Component } from \"react\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"../src/App\";\nimport sandwichBuilderReducer from \"../src/store/reducers/sandwichBuilderReducer\";\nimport orderReducer from \"../src/store/reducers/order\";\nimport authReducer from \"../src/store/reducers/auth\";\n\n// const composeEnhancers =\n//   process.env.NODE_ENV === \"development\"\n//     ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n//     : null || compose;\n\nconst rootReducer = combineReducers({\n  sandwichBuilder: sandwichBuilderReducer,\n  order: orderReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default class index extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}