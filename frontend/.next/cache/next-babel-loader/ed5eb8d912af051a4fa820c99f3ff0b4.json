{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var updateObject = function updateObject(oldObject, updatedProperties) {\n  return _objectSpread({}, oldObject, updatedProperties);\n};\nexport var checkValidity = function checkValidity(value, rules) {\n  var isValid = true;\n\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    var pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    var _pattern = /^\\d+$/;\n    isValid = _pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/frontend/src/shared/utility.js"],"names":["updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","pattern","test","isNumeric"],"mappings":";AAAA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,SAAD,EAAYC,iBAAZ,EAAkC;AAC5D,2BACKD,SADL,EAEKC,iBAFL;AAID,CALM;AAOP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAkB;AAC7C,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,IAAP;AACD;;AAED,MAAIA,KAAK,CAACE,QAAV,EAAoB;AAClBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACD;;AAED,MAAID,KAAK,CAACI,SAAV,EAAqB;AACnBH,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACD;;AAED,MAAID,KAAK,CAACM,SAAV,EAAqB;AACnBL,IAAAA,OAAO,GAAGF,KAAK,CAACM,MAAN,IAAgBL,KAAK,CAACM,SAAtB,IAAmCL,OAA7C;AACD;;AAED,MAAID,KAAK,CAACO,OAAV,EAAmB;AACjB,QAAMC,OAAO,GAAG,uIAAhB;AACAP,IAAAA,OAAO,GAAGO,OAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACD;;AAED,MAAID,KAAK,CAACU,SAAV,EAAqB;AACnB,QAAMF,QAAO,GAAG,OAAhB;AACAP,IAAAA,OAAO,GAAGO,QAAO,CAACC,IAAR,CAAaV,KAAb,KAAuBE,OAAjC;AACD;;AAED,SAAOA,OAAP;AACD,CA7BM","sourcesContent":["export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isNumeric) {\n    const pattern = /^\\d+$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  return isValid;\n};\n"]},"metadata":{},"sourceType":"module"}