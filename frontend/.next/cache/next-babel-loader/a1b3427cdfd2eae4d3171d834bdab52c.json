{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\nexport var purchaseSandwichSuccess = function purchaseSandwichSuccess(id, orderData) {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport var purchaseSandwichFail = function purchaseSandwichFail(error) {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_FAIL,\n    error: error\n  };\n};\nexport var purchaseSandwichStart = function purchaseSandwichStart() {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_START\n  };\n};\nexport var purchaseSandwich = function purchaseSandwich(orderData, token) {\n  return function (dispatch) {\n    dispatch(purchaseSandwichStart());\n    axios.post(\"/orders.json?auth=\" + token, orderData).then(function (response) {\n      dispatch(purchaseSandwichSuccess(response.data.name, orderData));\n    })[\"catch\"](function (error) {\n      dispatch(purchaseSandwichFail(error));\n    });\n  };\n};\nexport var purchaseInit = function purchaseInit() {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport var fetchOrdersSuccess = function fetchOrdersSuccess(orders) {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\nexport var fetchOrdersFail = function fetchOrdersFail(error) {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\nexport var fetchOrdersStart = function fetchOrdersStart() {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\nexport var fetchOrders = function fetchOrders(token, userId) {\n  return function (dispatch) {\n    dispatch(fetchOrdersStart());\n    var queryParams = \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios.get(\"/orders.json\" + queryParams).then(function (res) {\n      var fetchedOrders = [];\n\n      for (var key in res.data) {\n        fetchedOrders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      dispatch(fetchOrdersSuccess(fetchedOrders));\n    })[\"catch\"](function (err) {\n      dispatch(fetchOrdersFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/frontend/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseSandwichSuccess","id","orderData","type","PURCHASE_SANDWICH_SUCCESS","orderId","purchaseSandwichFail","error","PURCHASE_SANDWICH_FAIL","purchaseSandwichStart","PURCHASE_SANDWICH_START","purchaseSandwich","token","dispatch","post","then","response","data","name","purchaseInit","PURCHASE_INIT","fetchOrdersSuccess","orders","FETCH_ORDERS_SUCCESS","fetchOrdersFail","FETCH_ORDERS_FAIL","fetchOrdersStart","FETCH_ORDERS_START","fetchOrders","userId","queryParams","get","res","fetchedOrders","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nexport const purchaseSandwichSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\n\nexport const purchaseSandwichFail = error => {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_FAIL,\n    error: error\n  };\n};\n\nexport const purchaseSandwichStart = () => {\n  return {\n    type: actionTypes.PURCHASE_SANDWICH_START\n  };\n};\n\nexport const purchaseSandwich = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseSandwichStart());\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(response => {\n        dispatch(purchaseSandwichSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseSandwichFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n\nexport const fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders\n  };\n};\n\nexport const fetchOrdersFail = error => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error\n  };\n};\n\nexport const fetchOrdersStart = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_START\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersStart());\n    const queryParams =\n      \"?auth=\" + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(err => {\n        dispatch(fetchOrdersFail(err));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}