{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar purchaseInit = function purchaseInit(state, action) {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nvar purchaseSandwichStart = function purchaseSandwichStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar purchaseSandwichSuccess = function purchaseSandwichSuccess(state, action) {\n  var newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nvar purchaseSandwichFail = function purchaseSandwichFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar fetchOrdersStart = function fetchOrdersStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar fetchOrdersSuccess = function fetchOrdersSuccess(state, action) {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nvar fetchOrdersFail = function fetchOrdersFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_SANDWICH_START:\n      return purchaseSandwichStart(state, action);\n\n    case actionTypes.PURCHASE_SANDWICH_SUCCESS:\n      return purchaseSandwichSuccess(state, action);\n\n    case actionTypes.PURCHASE_SANDWICH_FAIL:\n      return purchaseSandwichFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/Taivnaa/Desktop/github/sandwich-builder/frontend/src/store/reducers/order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseSandwichStart","purchaseSandwichSuccess","newOrder","orderData","id","orderId","concat","purchaseSandwichFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_INIT","PURCHASE_SANDWICH_START","PURCHASE_SANDWICH_SUCCESS","PURCHASE_SANDWICH_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseInit = (state, action) => {\n  return updateObject(state, { purchased: false });\n};\n\nconst purchaseSandwichStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst purchaseSandwichSuccess = (state, action) => {\n  const newOrder = updateObject(action.orderData, { id: action.orderId });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nconst purchaseSandwichFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst fetchOrdersStart = (state, action) => {\n  return updateObject(state, { loading: true });\n};\n\nconst fetchOrdersSuccess = (state, action) => {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nconst fetchOrdersFail = (state, action) => {\n  return updateObject(state, { loading: false });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n    case actionTypes.PURCHASE_SANDWICH_START:\n      return purchaseSandwichStart(state, action);\n    case actionTypes.PURCHASE_SANDWICH_SUCCESS:\n      return purchaseSandwichSuccess(state, action);\n    case actionTypes.PURCHASE_SANDWICH_FAIL:\n      return purchaseSandwichFail(state, action);\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}